#x = "Dose (mg)", y = "Teeth length")
plas1
a <- theme(
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
axis.line = element_line(colour = "black"))
plas2 <- plas1 + a
plas2
plas2 + scale_x_discrete(name = "Variables",
labels = c("% of migrants", "Host Richness",
"Prevalence", "% of migrant species",
"Number of migrants"))
model5H<- glmer(RiquezaH~abundance + RiquezadeHospedeiros + Prevalencia + migrantes + n_migrants
+ (1|Bioma), data = dados, family = poisson())
H <- plot_model(model5H, type = "std", vline.color = "black")
H1 <- H  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness",
caption = "Haemoproteus")
#x = "Dose (mg)", y = "Teeth length")
H1
a <- theme(
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
axis.line = element_line(colour = "black"))
H2 <- H1 + a
H2
H2 + scale_x_discrete(name = "Variables",
labels = c("% of migrants", "Host Richness",
"Prevalence", "% of migrant species",
"Number of migrants"))
summary(model2)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/.RData")
summary(model2)
model2 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados4,
family = (Beta()),
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/.RData")
summary(model2)
parameters::p_value(model2)
parameters::model_parameters(model2)
plot <- plot(conditional_effects(model2), points = FALSE, theme = a)
library(ape)
library(tidyverse)
library(devtools) # load package
#devtools::install_github("r-lib/pkgbuild") # install updated version of pkgbuild from GitHub
library(pkgbuild) # load package
find_rtools() # should be TRUE, assuming you have Rtools 3.5
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(ggplot2)
library(brms)
library(brms)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/Objetivo1.RData")
model2 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados4,
family = (Beta()),
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
brms <- readRDS("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/brms.rds")
brms <- readRDS("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/brms.rds")
View(brms)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/Objetivo1.RData")
model2 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados4,
family = (Beta()),
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
summary(model2)
model4 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados6,
family = (Beta()), #check family
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
levels(dados6$Host_Status)
dados6$Host_Status<- relevel(dados6$Host_Status, ref="R")
dados6$Host_Status=as.factor(paste(dados6$Host_Status))
dados6$Host_Status<- relevel(dados6$Host_Status, ref="R")
levels(dados6$Host_Status)
model4 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados6,
family = (Beta()), #check family
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
dados7$Host_Status=as.factor(paste(dados7$Host_Status))
dados7$Host_Status<- relevel(dados7$Host_Status, ref="R")
dados4$Host_Status=as.factor(paste(dados4$Host_Status))
dados4$Host_Status<- relevel(dados4$Host_Status, ref="R")
levels(dados4$Host_Status)
model2 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados4,
family = (Beta()),
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
summary(model2)
levels(dados6$Host_Status)
model4 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados6,
family = (Beta()), #check family
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
summary(model4)
dados7$Host_Status<- relevel(dados7$Host_Status, ref="R")
model5 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados7,
family = (Beta()), #check family
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
summary(model5)
dados4$Host_Status=as.factor(paste(dados4$Host_Status))
dados4$Host_Status<- relevel(dados4$Host_Status, ref="R")
levels(dados4$Host_Status)
model2 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados4,
family = (Beta()),
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
library(brms)
model2 <- brm(
Perlocation~Host_Status + n_bird_individuals + riqueza, data = dados4,
family = (Beta()),
prior = c(
prior(student_t(3, 0, 10), "Intercept"),
prior(gamma(0.01, 0.01),"phi")
))
View(model2)
summary(model2)
?plot_model
parameters::model_parameters(model10)
p <- plot_model(model10, type = "std2", vline.color = "black", theme = a)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(ggplot2)
library(devtools)
p <- plot_model(model10, type = "std2", vline.color = "black", theme = a)
library(lme4)
library(readxl)
library(tidyverse)
library(ggpubr)
p <- plot_model(model10, type = "std2", vline.color = "black", theme = a)
p1 <- p  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness")
#caption = "Plasmodium")
#x = "Dose (mg)", y = "Teeth length")
p1
a <- theme(
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
axis.line = element_line(colour = "black"))
p2 <- p1 + a
p2
p2 + scale_x_discrete(name = "Variables",
labels = c("Temperature", "Number of migrants", "% of migrant species",
"Prevalence", "Host Richness", "% of migrants"))
parameters::model_parameters(model10)
?plot_
?plot_model
p <- plot_model(model10, type = "std2", vline.color = "black", theme = a)
?plot_model
p1 <- p  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness")
#caption = "Plasmodium")
#x = "Dose (mg)", y = "Teeth length")
p1
p <- plot_model(model10, type = "std", vline.color = "black", theme = a)
?plot_model
p1 <- p  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness")
#caption = "Plasmodium")
#x = "Dose (mg)", y = "Teeth length")
p1
a <- theme(
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
axis.line = element_line(colour = "black"))
p2 <- p1 + a
p2
p2 + scale_x_discrete(name = "Variables",
labels = c("Temperature", "Number of migrants", "% of migrant species",
"Prevalence", "Host Richness", "% of migrants"))
p <- plot_model(model10, type = "std", vline.color = "black", theme = a, show.values = TRUE)
?plot_model
p1 <- p  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness")
#caption = "Plasmodium")
#x = "Dose (mg)", y = "Teeth length")
p1
a <- theme(
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
axis.line = element_line(colour = "black"))
p2 <- p1 + a
p2
p2 + scale_x_discrete(name = "Variables",
labels = c("Temperature", "Number of migrants", "% of migrant species",
"Prevalence", "Host Richness", "% of migrants"))
p <- plot_model(model10, type = "std", vline.color = "black", theme = a)
p <- plot_model(model10, type = "pred", vline.color = "black", theme = a)
?plot_model
p1 <- p  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness")
#caption = "Plasmodium")
#x = "Dose (mg)", y = "Teeth length")
p1
a <- theme(
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
axis.line = element_line(colour = "black"))
p2 <- p1 + a
p2
p2 + scale_x_discrete(name = "Variables",
labels = c("Temperature", "Number of migrants", "% of migrant species",
"Prevalence", "Host Richness", "% of migrants"))
p2 + scale_x_discrete(name = "Variables",
labels = c("Temperature", "Number of migrants", "% of migrant species",
"Prevalence", "Host Richness", "% of migrants"))
p <- plot_model(model10, type = "pred", vline.color = "black", theme = a)
?plot_model
p1 <- p  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness")
p <- plot_model(model10, type = "str", vline.color = "black", theme = a)
p <- plot_model(model10, type = "std", vline.color = "black", theme = a)
?plot_model
p1 <- p  + labs(title = "Parameters estimate",
subtitle = "Parasite Richness")
#caption = "Plasmodium")
#x = "Dose (mg)", y = "Teeth length")
p1
a <- theme(
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
axis.line = element_line(colour = "black"))
p2 <- p1 + a
p2
p2 + scale_x_discrete(name = "Variables",
labels = c("Temperature", "Number of migrants", "% of migrant species",
"Prevalence", "Host Richness", "% of migrants"))
plot_model(model5, type = "pred")
p2 + scale_x_discrete(name = "Variables",
labels = c("Temperature", "Number of migrants", "% of migrant species",
"Prevalence", "Host Richness", "% of migrants"))
plot_model(model, type = "pred")
plot_model(model, type = "pred")
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/Obj2B.RData")
View(plot2)
plot6
plot4
plot2
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/Obj2B.RData")
summary(model)
summary(modelP)
summary(modelH)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/Obj2B.RData")
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/Obj2B.RData")
plot6 <- plot5$abundance + labs(x = "Proportion of migrant individuals", y = "Number of Infections", caption = "Haemoproteus")
plot6
plot6 <- plot5$abundance + labs(x = "Proportion of migrant individuals", y = "Number of Infections", caption = "Haemoproteus")
library(tidyverse)
library(devtools) # load package
#devtools::install_github("r-lib/pkgbuild") # install updated version of pkgbuild from GitHub
library(pkgbuild) # load package
find_rtools() # should be TRUE, assuming you have Rtools 3.5
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(ggplot2)
library(brms)
library(readxl)
library(ggpubr)
plot6 <- plot5$abundance + labs(x = "Proportion of migrant individuals", y = "Number of Infections", caption = "Haemoproteus")
plot6
plot4 <- plot3$abundance + labs(x = "Proportion of migrant individuals", y = "Number of Infections", caption = "Plasmodium")
plot4
plot2 <- plot1$abundance + labs(x = "Proportion of migrant individuals", y = "Number of Infections") + coord_cartesian(ylim = c(0, 15)) #caption = "Plasmodium")
plot2
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/Objetivo1.RData")
summary(model5)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/Objetivo1.RData")
summary(model5)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/Geo3.Rdata")
summary(model2)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/Geo2.RData")
summary(model2)
parameters::model_parameters(model2)
plot$Host_Status$data$estimate__
plot$Host_Status$data$lower__
plot$Host_Status$data$upper__
parameters::p_value(model)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/Obj2A.RData")
parameters::p_value(model)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/R/.RData")
library(tidyverse)
library(ggplot2)
library(brms)
library(readxl)
library(ggpubr)
library(ape)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
dados3$residuals <- res2$Estimate
dados3$residuals <- as.numeric(dados3$residuals)
dados3a <- as.matrix(dist(cbind(dados3$Longitude, dados3$Latitude)))
dados3b <- 1/dados3a
diag(dados3b) <- 0
dados3b <-ifelse(dados3b=="Inf",0,dados3b )
dados3b[1:5, 1:5]
Moran.I(dados3$residuals, dados3b, na.rm = TRUE)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
View(dados3)
library(tidyverse)
library(ggplot2)
library(brms)
library(readxl)
library(ggpubr)
modelP <- brm(PosP~Totalsample+abundance + RiquezadeParasitos + (1|Bioma) + (1|Localidade) + (1|phylo),
data = dados3,
family = zero_inflated_negbinomial(),
cov_ranef = list(phylo = A),
prior = c(
prior(student_t(3, 1.1, 2.5), "Intercept"),
prior(student_t(3, 0, 2.5), "sd" ),
prior(gamma(0.01, 0.01), "shape")
)
)
summary(modelP)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
View(dados3)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/.RData")
library(tidyverse)
library(ggplot2)
library(brms)
library(readxl)
library(ggpubr)
res1 <- residuals(model)
res1 <- as.data.frame(res1)
dados2$residuals <- res1$Estimate
dados2$residuals <- as.numeric(dados2$residuals)
dados2a <- as.matrix(dist(cbind(dados2$Longitude, dados2$Latitude)))
dados2b <- 1/dados2a
diag(dados2b) <- 0
dados2b <-ifelse(dados2b=="Inf",0,dados2b )
dados2b[1:5, 1:5]
Moran.I(dados2$residuals, dados2b, na.rm = TRUE)
library(ape)
Moran.I(dados3$residuals, dados3b, na.rm = TRUE)
Moran.I(dados2$residuals, dados2b, na.rm = TRUE)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
dados3$residuals <- res2$Estimate
dados3$residuals <- res2$Estimate
res3 <- residuals(modelH)
res3 <- as.data.frame(res3)
dados4$residuals <- res3$Estimate
modelP <- brm(PosP~Totalsample+abundance + RiquezadeParasitos + (1|Bioma) + (1|Localidade) + (1|phylo),
data = dados3,
family = negbinomial(),
cov_ranef = list(phylo = A),
prior = c(
prior(student_t(3, 1.1, 2.5), "Intercept"),
prior(student_t(3, 0, 2.5), "sd" ),
prior(gamma(0.01, 0.01), "shape")
)
)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
dados3$residuals <- res2$Estimate
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/.RData")
summary(modelP)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
dados3$residuals <- res2$Estimate
View(res1)
View(res2)
plot(res2$Estimate)
plot(res1$Estimate)
plot(res2$Estimate)
View(res1)
View(dados3)
View(dados3)
View(dados4)
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/.RData")
modelr::add_residuals(dados3, modelP, var = "resid")
View(dados3)
View(dados2)
replace(dados3$Localidade, "´", "i")
dados3$Localidade <-  gsub('Bras’lia', ' BSB ', dados3$Localidade)
dados4$Localidade <-  gsub('Bras’lia', ' BSB ', dados4$Localidade)
modelP <- brm(PosP~Totalsample+abundance + RiquezadeParasitos + (1|Bioma) + (1|Localidade) + (1|phylo),
data = dados3,
family = zero_inflated_negbinomial(),
cov_ranef = list(phylo = A),
prior = c(
prior(student_t(3, 1.1, 2.5), "Intercept"),
prior(student_t(3, 0, 2.5), "sd" ),
prior(gamma(0.01, 0.01), "shape")
)
)
library(tidyverse)
library(ggplot2)
library(brms)
library(readxl)
library(ggpubr)
library(ape)
modelP <- brm(PosP~Totalsample+abundance + RiquezadeParasitos + (1|Bioma) + (1|Localidade) + (1|phylo),
data = dados3,
family = zero_inflated_negbinomial(),
cov_ranef = list(phylo = A),
prior = c(
prior(student_t(3, 1.1, 2.5), "Intercept"),
prior(student_t(3, 0, 2.5), "sd" ),
prior(gamma(0.01, 0.01), "shape")
)
)
modelP <- brm(PosP~Totalsample+abundance + RiquezadeParasitos + (1|Bioma) + (1|Localidade) + (1|gr(phylo, cov = A)),
data = dados3,
family = zero_inflated_negbinomial(),
data2 = list(A = A),
prior = c(
prior(student_t(3, 1.1, 2.5), "Intercept"),
prior(student_t(3, 0, 2.5), "sd" ),
prior(gamma(0.01, 0.01), "shape")
)
)
res2 <- residuals(modelP)
res2 <- as.data.frame(res2)
dados3$residuals <- res2$Estimate
load("C:/Users/danid/Documents/Lab Poulin/PhD/PhD/Dados/Capítulo1/Tabelas/.RData")
modelr::add_residuals(dados3, modelP, var = "resid")
modelr::add_residuals(dados3, modelP, var = "resid", allow_new_levels = TRUE)
?modelr::add_residuals
dados5 <- filter(dados3, Localidade != "Parque_Nacional_de_Bras’lia")
dados5$residuals <- res2$Estimate
dados5$residuals <- as.numeric(dados5$residuals)
dados5a <- as.matrix(dist(cbind(dados5$Longitude, dados5$Latitude)))
dados5b <- 1/dados5a
diag(dados5b) <- 0
dados5b <-ifelse(dados5b=="Inf",0,dados5b )
dados5b[1:5, 1:5]
Moran.I(dados5$residuals, dados5b, na.rm = TRUE)
dados6 <- filter(dados4, Localidade != "Parque_Nacional_de_Bras’lia")
dados6$residuals <- res3$Estimate
dados6$residuals <- as.numeric(dados6$residuals)
dados6a <- as.matrix(dist(cbind(dados6$Longitude, dados6$Latitude)))
dados6b <- 1/dados6a
diag(dados6b) <- 0
dados6b <-ifelse(dados6b=="Inf",0,dados6b )
dados6b[1:5, 1:5]
Moran.I(dados6$residuals, dados6b, na.rm = TRUE)
res3 <- residuals(modelH)
res3 <- as.data.frame(res3)
dados6 <- filter(dados4, Localidade != "Parque_Nacional_de_Bras’lia")
dados6$residuals <- res3$Estimate
dados6$residuals <- as.numeric(dados6$residuals)
dados6a <- as.matrix(dist(cbind(dados6$Longitude, dados6$Latitude)))
dados6b <- 1/dados6a
diag(dados6b) <- 0
dados6b <-ifelse(dados6b=="Inf",0,dados6b )
dados6b[1:5, 1:5]
Moran.I(dados6$residuals, dados6b, na.rm = TRUE)
